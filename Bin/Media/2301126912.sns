class EnemyEagle
{
    float x, y;
    int flipped;
    int visible;
    float time_to_flight = 2.0f;
    float dir = -1.0f;
    float max_fly_time = 2.0f;
    float speed = 200.0f;
    int hp = 1;
}

class Bonus
{
    float x, y;
    int flipped;
    int visible;
    int score;
}

class MovingBlock
{
    float x, y;
    int flipped;
    int visible;
    float time_to_flight = 2.0f;
    float dir = -1.0f;
    float max_fly_time = 2.0f;
    float speed = 100.0f;
}

class Game
{
    array<Bonus> diamonds;
    array<Bonus> cherries;
    array<EnemyEagle> eagles;
    array<MovingBlock> moving_blocks;
    SpriteGraph@ hero;
    CharacterCamera2D@ camera;
    Sprite@ item_taken;
    Sprite@ enemy_death;
    VirtualJoystick@ vjoy;

    float move_speed = 10.0f;
    float accel_speed = 40.0f;
    float stop_speed = 30.0f; 
    float jump_impulse = -30.0f;    

    void Update(float dt)
    {
        bool allow_jump = hero.CheckColissionNormal(0, 1.0f);

        float velocity_x = hero.GetLinearVelocityX();
        float velocity_y = hero.GetLinearVelocityY();

        if (!allow_jump && velocity_y > 0.5f)
        {
            hero.ActivateLink("fall");
        }

        if (Control_GetDebugState("KEY_A", 0) > 0 || vjoy.stick_delta_x < -0.5f)
        {
            hero.horz_flipped = true;
            
            if (allow_jump)
            {
                hero.ActivateLink("run");
            }

            hero.SetLinearVelocity(-move_speed, 0);

            velocity_x -= dt * accel_speed;

            if (velocity_x < -move_speed)
            {
                velocity_x = -move_speed;
            }
        }
        else
        if (Control_GetDebugState("KEY_D", 0) > 0 || vjoy.stick_delta_y > 0.5f)
        {
            hero.horz_flipped = false;

            if (allow_jump)
            {
                hero.ActivateLink("run");
            }

            velocity_x += dt * accel_speed;

            if (velocity_x > move_speed)
            {
                velocity_x = move_speed;
            }
        }
        else
        {
            if (velocity_x > 0.0001f)
            {
                velocity_x -= dt * stop_speed;

                if (velocity_x < 0.0f)
                {
                    velocity_x = 0.0f;
                }
            }
            else
            if (velocity_x < -0.0001f)
            {
                velocity_x += dt * stop_speed;

                if (velocity_x > 0.0f)
                {
                    velocity_x = 0.0f;
                }
            }

            if (allow_jump)
            {
                hero.ActivateLink("idle");
            }
        }
        
        hero.SetLinearVelocity(velocity_x, velocity_y);

        if ((Control_GetDebugState("KEY_W", 1) > 0 || vjoy.button_a_pressed == 2) && allow_jump)
        {
            hero.ActivateLink("jump");
            hero.ApplyLinearImpulse(0.0f, jump_impulse);
        }

        camera.target_pos_x = hero.x;
        camera.target_pos_y = hero.y;

        for (int i=0; i<diamonds.length();i++)
        {
            if (diamonds[i].visible == 0)
            {
                continue;
            }

            if (abs(diamonds[i].x - hero.x) < 32 && abs(diamonds[i].y - hero.y) < 32)
            {
                diamonds[i].visible = 0;
                item_taken.AddInstance(diamonds[i].x, diamonds[i].y);
            }
        }

        for (int i=0; i<cherries.length();i++)
        {
            if (cherries[i].visible == 0)
            {
                continue;
            }

            if (abs(cherries[i].x - hero.x) < 32 && abs(cherries[i].y - hero.y) < 32)
            {
                cherries[i].visible = 0;
                item_taken.AddInstance(cherries[i].x, cherries[i].y);
            }
        }

        for (int i=0; i<eagles.length();i++)
        {
            if (eagles[i].hp == 0)
            {
                continue;
            }

            eagles[i].time_to_flight -= dt;

            if (eagles[i].time_to_flight < 0.0f)
            {
                eagles[i].dir = eagles[i].dir > 0.0f ? -1.0f : 1.0f; 
                eagles[i].time_to_flight = eagles[i].max_fly_time;
            }

            eagles[i].x += dt * eagles[i].speed * eagles[i].dir;
            eagles[i].flipped = eagles[i].dir > 0.0f ? 1 : 0;

            if (abs(eagles[i].x - hero.x) < 32 && abs(eagles[i].y - hero.y) < 32)
            {
                eagles[i].hp = 0;
                eagles[i].visible = 0;
                enemy_death.AddInstance(eagles[i].x, eagles[i].y);
            }
        }

        for (int i=0; i<moving_blocks.length();i++)
        {
            moving_blocks[i].time_to_flight -= dt;

            if (moving_blocks[i].time_to_flight < 0.0f)
            {
                moving_blocks[i].dir = moving_blocks[i].dir > 0.0f ? -1.0f : 1.0f; 
                moving_blocks[i].time_to_flight = moving_blocks[i].max_fly_time;
            }

            moving_blocks[i].y += dt * moving_blocks[i].speed * moving_blocks[i].dir;
        }
    }
}