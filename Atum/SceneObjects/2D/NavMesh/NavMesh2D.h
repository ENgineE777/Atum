
#pragma once

#include "NavMesh2DBase.h"

/**
\page scene_object_2D_NavMesh2D NavMesh2D

Currently 2D space is a special mode and this class represents a navigation mesh in that special 2D mode.
Navigation mesh is not autogenerated and should be created by hands.

NavMesh itself consist from nodes. Nodes can be linked. Every linked nodes that creates triangle ara counted as a part of NavMesh.

To add new node firstly scene object needed to be selected. After that press hot key 'P' to add new node in center of screen.
If another node is selected then pressing hot key 'O' will add copy of a sprite near previosly selected one. Press hot key 'I' to
delete selected node. Press hot key 'U' to delete all links of selected node.

To add link to node firstly select needed node and then hold key 'C' and then drag link to desired need.

To test constraction of past hold down key 'V' and click in needed point for set start point. Then hold down key 'B' and click in
needed point for set end point.

![Caption text](../images/NavMesh.jpg "Image")

To find path firstly NavMesh2D::GetPath should be called. If either start point or end point are outside of a navigation mesh then
closed point to navigation will be found and final path will contain this points as well. This method will return index of finded
path in the pool. To move along finded path NavMesh2D::MoveAlongPath should be called. NavMesh2D::GetPathCurPoint will return current
point in the path. NavMesh2D::RemovePath will remove path when it became unnecessary.

This class ::NavMesh2D is a representation on C++ side.

This class Script::NavMesh2D is a representation in a script.

Instance property parameters
----------------------------

Name              | Description
------------------| -------------
x                 | X coordinate of a position
y                 | Y coordinate of a position
links             | Array of links

Parameters
----------

Name              | Description
------------------| -------------
inst              | Array of nodes

*/


/**
\ingroup gr_code_scene_objects_2D
*/

/**
\brief Representation of navigation mesh in 2D space

Currently 2D space is a special mode and this class represents a navigation mesh in that special 2D mode.
Navigation mesh is not autogenerated and should be created by hands. More details can be found at \ref scene_object_2D_NavMesh2D "link".

To find path firstly NavMesh2D::GetPath should be called. If either start point or end point are outside of a navigation mesh then
closed point to navigation will be found and final path will contain this points as well. This method will return index of finded
path in the pool. To move along finded path NavMesh2D::MoveAlongPath should be called. NavMesh2D::GetPathCurPoint will return current
point in the path. NavMesh2D::RemovePath will remove path when it became unnecessary.

This class Script::NavMesh2D is a representation in a script.

*/

class NavMesh2D : public NavMesh2DBase
{
public:

#ifndef DOXYGEN_SKIP

	META_DATA_DECL(NavMesh2D)

	Transform2D trans;

	struct Link
	{
		META_DATA_DECL_BASE(Link)

		Link() {};
		Link(int set_index)
		{
			index = set_index;
		}

		int index = -1;
	};

	struct Node
	{
		META_DATA_DECL_BASE(Node)

		Vector2 pos = 0.0f;

		std::vector<Link> links;
	};

	int sel_inst = -1;
	int source_inst = -1;
	int target_inst = -1;
	bool link_mode = false;
	Vector2 target_pos;
	vector<Node> instances;

	Vector2 start_pt = 0.0f;
	Vector2 end_pt = 0.0f;

	virtual ~NavMesh2D() = default;

	void ApplyProperties() override;

	void Draw(float dt) override;

	void ConstructNavMesh() override;
#endif

#ifndef DOXYGEN_SKIP

#ifdef EDITOR
	void OnMouseMove(Vector2 delta_ms) override;
	void OnLeftMouseDown(Vector2 ms) override;
	void OnLeftMouseUp() override;
	bool CheckSelection(Vector2 ms, Vector start, Vector dir) override;
	void SetEditMode(bool ed) override;
	void SetGizmo();
	int  GetInstCount();
#endif

#endif
};
